Study information for RECCA (reward effects on cognitive control and attention) study

This study is designed to determine if learned reward valence modulates cognitive control and attention processes, and at what stage of processing (planning or response selection) this occurs. 
The general experimental design is a reaching task. 
More information on experimental design can be found in the RECCA_proposal.ppt file in the appropriate folder (on office computer, it's /Users/jameswilmott/Documents/Research/Value and attentional selection/

Experiment 1
Began coding in Spring 2019

Pipeline:
0. Before running any stimulus presentation code, run the tracker calibration routine in calibrate_tracker_new.m. This creates a calibration-dependent transformation matrix that will be applied to every sample retrieved from the tracker.

1. Training phase- Call Main script, which sets up parameters from params() function and calls trial(function) iteratively.





## Display information ##

For downstairs backlit Plexiglass display, the dimensions are 1024 by 768 pixels [ 45 cm by 33.5 cm ]. 
Refresh rate of 60 Hz.




## Dated notes: ##

4/4/19: Instantiated a MATLAB folder on lab computer for RECCA experiment. 
Because the downstairs computer does not have .git installed, and because I do not wish to download CYGWIN on a lab computer without permission, I saved files on Google Drive.
To update on the origin repository on my harddrive, I will copy the files from this local computer to Drive, go to my office computer or the Ubuntu lab machine, and then push those commits. 

Did: Created skeleton code in params() as well as created Classes for a left and right oriented arrow. These classes work, but need to figure out whether I want in include Screen() function
 calls in the object or not.
 
To-do: Need to finish incorporating parameters, include skeleton code for training Main and Trial scripts, as well as figure out the reach tracking
aspects. Also must do some work for color.


4/8/2019: Jianfei found that the sign of samples retrieved from the reach tracker is off for some trials (e.g., -3.7 is actually 3.7). She will be troubleshooting this week to figure out why that is the problem.

I have traditionally saved data in a cell array for each use in subsequent analyses. However, Jeff and Jianfei etc. save the data into long pre-allocated arrays in an inefficient manner, and save the data after each trial. I plan to do this, but need to ensure I correctly pre-allocate the arrays. I plan to return data from the trial function in a cell array , unpack into the existing arrays created in Main, and then save everything…

Did: Created most of the skeleton code for the TrainingMain and started doing so for the trainingTrial.

To-do: Must create randomization schedule for trial types among the blocks. Must create arrays to hld the variables of interest in the Main script, which will be fed the results of each trial from a returned cell array structure from the trainingTrial function. Then, in the trial function I need to create the timeline of stimulus presentation, including creating the getParams() local function.
